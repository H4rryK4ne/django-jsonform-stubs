from collections.abc import Callable
from typing import Any

from django_jsonform.utils import (
    AllOfSchema,
    AnyChoices,
    AnyOfSchema,
    AnySchema,
    ArraySchema,
    BooleanSchema,
    ConstSchema,
    ErrorMap,
    IntegerSchema,
    NumberSchema,
    ObjectSchema,
    OneOfSchema,
    RootSchema,
    StringSchema,
)

class JSONSchemaValidator:
    schema: RootSchema
    error_map: ErrorMap

    def __init__(self, schema: RootSchema) -> None: ...
    def __call__(self, value: Any) -> None: ...
    def join_coords(self, *args: Any) -> str: ...
    def add_error(self, key: str, msg: str, *, raise_exc: bool = ...) -> None: ...
    def get_validator(self, schema_type: str) -> Callable[
        AnySchema,
        Any,
    ]: ...
    def get_ref(self, ref: str): ...
    def get_date(self, value: str): ...
    def get_time(self, value: str): ...
    def get_datetime(self, value: str): ...
    def get_choice_values(self, choices: AnyChoices): ...
    def is_value_in_choices(self, schema: AnySchema, value: Any): ...
    def validate_array(self, schema: ArraySchema, data: Any, coords: str, *, raise_exc: bool = ...) -> None: ...
    def validate_object(self, schema: ObjectSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_string(self, schema: StringSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_boolean(self, schema: BooleanSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_integer(self, schema: IntegerSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_number(self, schema: NumberSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_oneOf(self, schema: OneOfSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_anyOf(self, schema: AnyOfSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_allOf(self, schema: AllOfSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def validate_const(self, schema: ConstSchema, data: Any, coords: str, raise_exc: bool = ...) -> None: ...
    def __eq__(self, other: JSONSchemaValidator): ...
